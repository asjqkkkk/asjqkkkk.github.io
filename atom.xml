<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老晨子の博客</title>
  
  <subtitle>想写的时候写一些</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-14T12:03:16.137Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Old Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android开发者编写自己的API接口（下）</title>
    <link href="http://yoursite.com/2018/08/14/Android%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84API%E6%8E%A5%E5%8F%A3%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://yoursite.com/2018/08/14/Android开发者编写自己的API接口（下）/</id>
    <published>2018-08-14T11:59:17.000Z</published>
    <updated>2018-08-14T12:03:16.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上一篇<a href="https://oldchen.top/2018/08/05/Android%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84API%E6%8E%A5%E5%8F%A3%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="noopener">Android开发者编写自己的API接口：从零开始（一）</a>中，已经介绍了如何搭建一个基本的开发环境，以及接口的编写，最后是能够成功运行的。</p><p>这一篇将更进一步，主要解决下面两个问题：</p><ul><li>①：如何让后台项目运行在TomCat上</li><li>②：如何在云服务器上部署自己的项目<a id="more"></a> </li></ul><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><h4 id="一、本地Tomcat的使用"><a href="#一、本地Tomcat的使用" class="headerlink" title="一、本地Tomcat的使用"></a>一、本地Tomcat的使用</h4><h5 id="1-1、安装Tomcat"><a href="#1-1、安装Tomcat" class="headerlink" title="1.1、安装Tomcat"></a>1.1、安装Tomcat</h5><p>使用TomCat，自然是要TomCat的安装包咯</p><p><a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">安装包下载地址</a></p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/001.png" alt="image"></p><p>由于我们本地应该都是已经安装配置过JDK了的，所以安装Tomcat的时候一路Next就行了</p><h5 id="1-2、配置Gradle"><a href="#1-2、配置Gradle" class="headerlink" title="1.2、配置Gradle"></a>1.2、配置Gradle</h5><p>首先，在项目的gradle所在的目录下创建gradle.properties，然后在里面添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># true就去打包War，否则不打包</span><br><span class="line">BUILD_WAR=true</span><br></pre></td></tr></table></figure></p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/002.png" alt="image"></p><p>接着在build.gradle中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if (BUILD_WAR.toBoolean()) &#123;</span><br><span class="line">    apply plugin: &apos;war&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    ...</span><br><span class="line">    if (BUILD_WAR.toBoolean()) &#123;</span><br><span class="line">        providedRuntime(&apos;org.springframework.boot:spring-boot-starter-tomcat&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/003.png" alt="image"></p><p>同时，不要忘了创建一个ServletInitializer类，用于SpringBoot的初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class ServletInitializer extends SpringBootServletInitializer &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">protected SpringApplicationBuilder configure(SpringApplicationBuilder application) &#123;</span><br><span class="line">return application.sources(TestForDemoApplication.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/008.png" alt="image"></p><p>这些都完成后，在Terminal控制台输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradlew assemble</span><br></pre></td></tr></table></figure><p>等待结果，然后就可以看到一个war包了</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/004.png" alt="image"></p><h5 id="1-3、配置Tomcat"><a href="#1-3、配置Tomcat" class="headerlink" title="1.3、配置Tomcat"></a>1.3、配置Tomcat</h5><p>找到demo-0.0.1-SNAPSHOT.war所在目录，然后将其更名为oldchen.war</p><pre><code>注意，这里修改后的名字将会与部署到Tomcat上的网络请求地址有关哦</code></pre><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/005.png" alt="image"></p><p>然后找到Tomcat的安装目录下的webapps目录，将里面的其他文件和文件夹删除，把oldchen.war复制到该目录</p><p>接下来，在Tomcat目录下的bin目录中运行Tomcat9w.exe</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/006.png" alt="image"></p><p>然后你会发现，webapps目录下多了一个文件</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/007.png" alt="image"></p><h5 id="1-4、测试本地Tomcat"><a href="#1-4、测试本地Tomcat" class="headerlink" title="1.4、测试本地Tomcat"></a>1.4、测试本地Tomcat</h5><p>接下来，访问地址：</p><p><a href="http://localhost:8080/oldchen/user/user?account=oldchen" target="_blank" rel="noopener">http://localhost:8080/oldchen/user/user?account=oldchen</a></p><p>结果：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/009.png" alt="image"></p><p>可以看到，本地的Tomcat已经部署成功，接下来就是云服务器上部署Tomcat了。</p><h4 id="二、云服务器上Tomcat的部署"><a href="#二、云服务器上Tomcat的部署" class="headerlink" title="二、云服务器上Tomcat的部署"></a>二、云服务器上Tomcat的部署</h4><h5 id="2-1、购买云服务器"><a href="#2-1、购买云服务器" class="headerlink" title="2.1、购买云服务器"></a>2.1、购买云服务器</h5><p>想在云服务器上部署Tomcat，首先需要购买一个服务器，我买的是腾讯云的服务器，初次接触的同学建议去使用试用的云服务器，等操作成功后再买也不迟</p><p>出于对初学者的人文关怀（没错，Is me），这里我使用的是Windows版的服务器：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/010.png" alt="image"></p><p>为了能够正常访问服务器的地址，需要给服务器配置一下安全组，安全组中需要添加这样一项规则：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/011.png" alt="image"></p><p>然后，使用远程连接，连接到云服务器，具体操作是：</p><pre><code>一、win+R二、输入mstsc三、输入云服务器的Ip地址，用户名以及密码，连接</code></pre><p>如果你使用的是windows2016版的服务器，同时遇到了”身份验证错误，要求的函数不支持”，而且你恰好是win10家庭版，那么下面有解决办法：<br><a href="https://jingyan.baidu.com/album/67508eb47ae5499ccb1ce410.html?picindex=3" target="_blank" rel="noopener">windows10家庭版 远程桌面报错</a></p><p>成功登录后，整个界面只有一个孤伶伶的回收站，到了这步，就准备开始配置吧。</p><h5 id="2-2、配置云服务器"><a href="#2-2、配置云服务器" class="headerlink" title="2.2、配置云服务器"></a>2.2、配置云服务器</h5><p>云服务器上面运行项目只需要Tomcat+Mysql+Navicat+JDK，配置方法和之前在本地配置是一样的，不过这里不建议使用上传的方法，因为上传实际上和下载是一样的，有时候还会受限于你自己宽带的上行速度。</p><p>重新下载安装JDK是很头疼的，下面是详细教程：</p><p><a href="https://blog.csdn.net/qq_32519693/article/details/71330930" target="_blank" rel="noopener">非常详细图文JDK和Tomcat安装和配置的图文教程</a></p><p>全部需要准备的文件如下：<br><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/012.png" alt="image"></p><p>其中，<strong>PatchNavicat</strong> 用于Navicat的破解，在上一篇的链接中已经说明。</p><p>而<strong>oldchen.sql</strong>则是通过本地Navicat生成Mysql文件，具体操作是：右键你选中的数据库，选择【转储SQL文件】→【结构和数据】，然后就可以生成了。使用方法就是在云服务器上创建一个数据库后选择【运行SQL文件】即可。</p><p>这样，本地数据库的迁移就完成了。剩下的操作与之前介绍的基本一致，不过有一点需要注意，为了开启外网连接，需要在Tomcat安装目录下找到conf目录，修改其中的server.xml文件：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/013.png" alt="image"></p><p>将port由8080修改为80</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/014.png" alt="image"></p><p>当你完成全部的操作后，就可以测试接口了。</p><h5 id="2-3、测试云服务器接口"><a href="#2-3、测试云服务器接口" class="headerlink" title="2.3、测试云服务器接口"></a>2.3、测试云服务器接口</h5><p>只要你的步骤是ok的，那么云服务器不会有什么问题。</p><p>由于在写这篇文章期间，我又多写了个登录接口，所以这里的测试例子用的是新的接口，仅供参考：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/2018.8.13/015.png" alt="image"></p><p>请求地址是：<a href="http://111.230.251.115/oldchen/user/login" target="_blank" rel="noopener">http://111.230.251.115/oldchen/user/login</a></p><h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>那么，编写接口的学习就到此为止了。</p><p>虽然有待完善的地方还不少，比如通过数据库指令对数据库进行增删改查、数据库之间相互关联等等，许多知识都需要慢慢学的。</p><p>此文章权当入门之径，剩下的还得靠大家自己多多钻研啦，毕竟作者本人需要学的地方也太多了，如有错误之处，还望指出，互相学习，岂不乐哉。</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/%E8%A1%A8%E6%83%85%E5%8C%85/%E5%91%8A%E8%BE%9E2.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在上一篇&lt;a href=&quot;https://oldchen.top/2018/08/05/Android%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84API%E6%8E%A5%E5%8F%A3%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%88%E4%B8%80%EF%BC%89/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android开发者编写自己的API接口：从零开始（一）&lt;/a&gt;中，已经介绍了如何搭建一个基本的开发环境，以及接口的编写，最后是能够成功运行的。&lt;/p&gt;
&lt;p&gt;这一篇将更进一步，主要解决下面两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①：如何让后台项目运行在TomCat上&lt;/li&gt;
&lt;li&gt;②：如何在云服务器上部署自己的项目
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android开发者编写自己的API接口（上）</title>
    <link href="http://yoursite.com/2018/08/05/Android%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84API%E6%8E%A5%E5%8F%A3%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://yoursite.com/2018/08/05/Android开发者编写自己的API接口（上）/</id>
    <published>2018-08-05T13:31:04.000Z</published>
    <updated>2018-08-14T11:58:19.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>作为一名Android开发人员，想要实现对一些数据的操作和展示，可以通过一些提供Api接口的网站去获取，虽然Api市场上种类繁多，不过别人提供的接口未必就是自己想要的，到最后，还是得自己去实现Api接口。</p><p>毕竟，最了解自己需求的人，还得是自己。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>很多小伙伴应该都会有着类似的需求，不过想去做的时候，常常无从下手。</p><p>所以这里做了一个整合，关于如何搭建开发环境，以及所需工具的下载等。</p><a id="more"></a> <p>参考文章：</p><ul><li><a href="https://www.jianshu.com/p/4a0d40806ea2" target="_blank" rel="noopener">Android程序员搭建一个属于自己的服务器，不再求各种公共API</a></li><li><a href="https://www.jianshu.com/p/f91ca5814bcf" target="_blank" rel="noopener">JAVA后台搭建(springboot+mybatis+mysql)项目搭建</a></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>一套开发环境下来，需要下面这些步骤：</p><ul><li>1：搭建开发环境，IntelliJ + spring-boot + mybatis</li><li>2：搭建数据库，mysql + navicat</li><li>3：搭建运行环境，tomcat + 腾讯云（或者阿里云）</li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="一、搭建开发环境"><a href="#一、搭建开发环境" class="headerlink" title="一、搭建开发环境"></a>一、搭建开发环境</h3><h4 id="1-1-IntelliJ-IDEA的安装"><a href="#1-1-IntelliJ-IDEA的安装" class="headerlink" title="1.1 IntelliJ IDEA的安装"></a>1.1 IntelliJ IDEA的安装</h4><p>Android开发者所使用的Android studio是基于这个IDEA开发的，所以两者的界面非常非常相似。</p><p>而且现在比较流行的Android开发语言Kotlin也是由IntelliJ IDEA的开发公司JetBrains所开发的。</p><h5 id="下载-IntelliJ-IDEA"><a href="#下载-IntelliJ-IDEA" class="headerlink" title="下载 IntelliJ IDEA"></a>下载 IntelliJ IDEA</h5><p>首先，下载安装包——<a href="https://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">【IntelliJ下载地址】</a></p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001.png" alt="image"></p><h5 id="安装-IntelliJ-IDEA"><a href="#安装-IntelliJ-IDEA" class="headerlink" title="安装 IntelliJ IDEA"></a>安装 IntelliJ IDEA</h5><p>下载完成后，就开始安装了</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-001.png" alt="image"></p><p>Next到下面的界面，可以自行选择</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-002.png" alt="image"></p><p>然后一直下一步，到可以运行IDEA，然后你应该会遇到需要购买的提示，破解的教程请看：</p><p><a href="https://blog.csdn.net/yangying496875002/article/details/73603303" target="_blank" rel="noopener">Windows7下安装与破解IntelliJ IDEA2017</a></p><p>win10也是适用的。</p><h4 id="1-2-MySQL的安装"><a href="#1-2-MySQL的安装" class="headerlink" title="1.2 MySQL的安装"></a>1.2 MySQL的安装</h4><h5 id="下载MySQL"><a href="#下载MySQL" class="headerlink" title="下载MySQL"></a>下载MySQL</h5><p>这里使用的是mysql-5.7.17.msi，下载地址是：</p><p><a href="https://downloads.mysql.com/archives/installer/" target="_blank" rel="noopener">MYSQL下载地址</a></p><h5 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h5><p>下载完成后进行安装：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-006.png" alt="image"></p><p>这里只选择了Server</p><p>然后一直下一步</p><p>到了设置密码这里，我设置的密码是【oldchen】,后面项目配置的密码也是这个，这里你可以随便设置自己的密码，不过后面配置的时候要保证密码输入一致就是：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-007.png" alt="image"></p><p>然后一直下一步，直到安装成功，接下来就是如何去操作数据库。</p><h4 id="1-3-Navicat的安装"><a href="#1-3-Navicat的安装" class="headerlink" title="1.3 Navicat的安装"></a>1.3 Navicat的安装</h4><p>Navicat用来对数据库进行操作，也是需要付费购买的，破解地址：<br><a href="https://blog.csdn.net/wypersist/article/details/79834490" target="_blank" rel="noopener">Navicat for MySQL 安装和破解（完美）</a></p><p>可以使用之后，来到如下界面：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-008.png" alt="image"></p><p>然后创建MYSQL连接：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-009.png" alt="image"></p><p>输入相关信息：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-010.png" alt="image"></p><p>然后就可以看到创建的连接了，右键→新建数据库：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-011.png" alt="image"></p><p>新建的数据库名字设置为oldchen,接下来双击这个数据库，新建一个user表,表中包含account,password,username以及自增主键id，具体操作如图所示：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/gif/001.gif" alt="image"></p><p>创建这个表后，我们可以添加一条数据：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-012.png" alt="image"></p><p>然后，开始配置IntelliJ IDEA</p><h4 id="1-4-IntelliJ-IDEA的配置"><a href="#1-4-IntelliJ-IDEA的配置" class="headerlink" title="1.4 IntelliJ IDEA的配置"></a>1.4 IntelliJ IDEA的配置</h4><h5 id="搭建SpringBoot项目"><a href="#搭建SpringBoot项目" class="headerlink" title="搭建SpringBoot项目"></a>搭建SpringBoot项目</h5><p>打开IntelliJ，左上角 File → New → Project，创建新项目：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-013.png" alt="image"></p><p>然后</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-004.png" alt="image"></p><p>接下来是选择依赖的界面，选中图中的全部依赖</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-005.png" alt="image"></p><p>下一步<br><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-019.png" alt="image"></p><p>开始项目构建，需要等待一定的时间，构建完成后的项目结构是这样的：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-015.png" alt="image"></p><p>结合之前新建的数据库，在resources目录下的application.properties中进行配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#oldchen为创建的数据库名字</span><br><span class="line">spring.datasource.url =jdbc:mysql://localhost:3306/oldchen</span><br><span class="line">mybatis.type-aliases-package = com.example.demo</span><br><span class="line"># 数据库用户名</span><br><span class="line">spring.datasource.username = root</span><br><span class="line"># 数据库密码</span><br><span class="line">spring.datasource.password = oldchen</span><br><span class="line"></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">#端口号</span><br><span class="line">spring.session.store-type=none</span><br><span class="line">spring.http.encoding.charset=UTF-8</span><br></pre></td></tr></table></figure><p>接下来就开始写接口啦</p><h4 id="1-5-接口的编写"><a href="#1-5-接口的编写" class="headerlink" title="1.5 接口的编写"></a>1.5 接口的编写</h4><p>由于我们之前在操作名为【oldchen】的数据库时，还新建了一个【user】表，所以这里先创建一个User类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public class User &#123;</span><br><span class="line">    private Integer id;</span><br><span class="line">    private String account;</span><br><span class="line">    private String password;</span><br><span class="line">    private String userName;</span><br><span class="line"></span><br><span class="line">    public Integer getId() &#123;</span><br><span class="line">        return id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setId(Integer id) &#123;</span><br><span class="line">        this.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getAccount() &#123;</span><br><span class="line">        return account;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAccount(String account) &#123;</span><br><span class="line">        this.account = account;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPassword() &#123;</span><br><span class="line">        return password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPassword(String password) &#123;</span><br><span class="line">        this.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getUserName() &#123;</span><br><span class="line">        return userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUserName(String userName) &#123;</span><br><span class="line">        this.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后创建UserMapper，用于查询（根据字段account查询）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@Mapper</span><br><span class="line">public interface UserMapper &#123;</span><br><span class="line"></span><br><span class="line">    @Select(&quot;select * from user where account = #&#123;account&#125;&quot;)</span><br><span class="line">    User findByAccount(String account);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着创建UserController，用于对数据的处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(&#123;&quot;/user&quot;&#125;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(value=&quot;/user&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String getUserInfoByName(String account) &#123;</span><br><span class="line">        User user = userMapper.findByAccount(account);</span><br><span class="line">        if (user == null)&#123;</span><br><span class="line">            return &quot;用户名保不存在&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return &quot;用户名存在——&quot; + user.getUserName();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后项目结构如下：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-016.png" alt="image"></p><h3 id="二、测试接口"><a href="#二、测试接口" class="headerlink" title="二、测试接口"></a>二、测试接口</h3><p>首先，运行项目</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-017.png" alt="image"></p><p>当项目正常运行后，测试下面的地址：</p><p><a href="http://localhost:8080/user/user?account=oldchen" target="_blank" rel="noopener">http://localhost:8080/user/user?account=oldchen</a></p><p>结果：</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/001-018.png" alt="image"></p><p>测试成功啦！</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>关于Api接口的学习，先到这里。</p><p>后面还会写关于如何将项目放在TomCat上，最后放在云服务器上，通过外网地址访问接口</p><p>那么，未完待续…</p><p><img src="https://my-blog-picture.oss-cn-beijing.aliyuncs.com/%E8%A1%A8%E6%83%85%E5%8C%85/%E5%91%8A%E8%BE%9E.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;作为一名Android开发人员，想要实现对一些数据的操作和展示，可以通过一些提供Api接口的网站去获取，虽然Api市场上种类繁多，不过别人提供的接口未必就是自己想要的，到最后，还是得自己去实现Api接口。&lt;/p&gt;
&lt;p&gt;毕竟，最了解自己需求的人，还得是自己。&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;很多小伙伴应该都会有着类似的需求，不过想去做的时候，常常无从下手。&lt;/p&gt;
&lt;p&gt;所以这里做了一个整合，关于如何搭建开发环境，以及所需工具的下载等。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Old Chen&#39;s Wish List</title>
    <link href="http://yoursite.com/2018/07/29/Old%20Chen&#39;s%20Wish%20List/"/>
    <id>http://yoursite.com/2018/07/29/Old Chen&#39;s Wish List/</id>
    <published>2018-07-29T14:51:44.000Z</published>
    <updated>2018-08-14T12:03:05.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Old-Chen的愿望"><a href="#一、Old-Chen的愿望" class="headerlink" title="一、Old Chen的愿望"></a>一、Old Chen的愿望</h2><h4 id="1-、have-a-good-feel"><a href="#1-、have-a-good-feel" class="headerlink" title="(1)、have a good feel"></a>(1)、have a good feel</h4><h4 id="2-、看完所有买的文学书"><a href="#2-、看完所有买的文学书" class="headerlink" title="(2)、看完所有买的文学书"></a>(2)、看完所有买的文学书</h4><ul><li style="list-style: none"><input type="checkbox"> 1：东野硅谷系列</li><li style="list-style: none"><input type="checkbox"> 2：三体系列             （✔××）<a id="more"></a> </li><li style="list-style: none"><input type="checkbox"> 3：《时间简史》</li><li style="list-style: none"><input type="checkbox"> 4：《边城》</li><li style="list-style: none"><input type="checkbox"> 5：《百年孤独》</li><li style="list-style: none"><input type="checkbox"> 6：《茶馆》</li></ul><h4 id="3-、买一些想买的东西"><a href="#3-、买一些想买的东西" class="headerlink" title="(3)、买一些想买的东西"></a>(3)、买一些想买的东西</h4><ul><li style="list-style: none"><input type="checkbox"> 1：《矮大紧指北》</li><li style="list-style: none"><input type="checkbox" checked> 2：《老梁的四大名著情商课》     </li><li style="list-style: none"><input type="checkbox" checked> 3：一个新的手机                </li><li style="list-style: none"><input type="checkbox"> 4：预购游戏</li><li style="list-style: none"><input type="checkbox" checked> 5：好吃的零食</li><li style="list-style: none"><input type="checkbox"> 6：一个天文望远镜</li><li style="list-style: none"><input type="checkbox" checked> 7：一个游戏机(switch)</li></ul><h4 id="4-、玩完已经买了的游戏"><a href="#4-、玩完已经买了的游戏" class="headerlink" title="(4)、玩完已经买了的游戏"></a>(4)、玩完已经买了的游戏</h4><ul><li style="list-style: none"><input type="checkbox"> 1：《巫师3》</li><li style="list-style: none"><input type="checkbox" checked> 2：《黑魂3》                 （全成就）</li><li style="list-style: none"><input type="checkbox"> 3：刺客信条系列</li><li style="list-style: none"><input type="checkbox"> 4：《古墓丽影：崛起》</li><li style="list-style: none"><input type="checkbox" checked> 5:《杀戮尖塔》 （全成就）</li><li style="list-style: none"><input type="checkbox" checked> 5:《塞尔达传说：旷野之息》 （救出公主）</li></ul><h4 id="5-、写APP"><a href="#5-、写APP" class="headerlink" title="(5)、写APP"></a>(5)、写APP</h4><ul><li style="list-style: none"><input type="checkbox"> 写一个日记本APP    (Wringting)</li><li style="list-style: none"><input type="checkbox"> 写一个单词生词本APP</li></ul><h4 id="6-、养宠物-Hard"><a href="#6-、养宠物-Hard" class="headerlink" title="(6)、养宠物(Hard)"></a>(6)、养宠物(Hard)</h4><ul><li style="list-style: none"><input type="checkbox"> 养一只猫  </li></ul><h2 id="二、Old-Chen的长期愿望-Hard"><a href="#二、Old-Chen的长期愿望-Hard" class="headerlink" title="二、Old Chen的长期愿望(Hard)"></a>二、Old Chen的长期愿望(Hard)</h2><h4 id="1-、学习啦"><a href="#1-、学习啦" class="headerlink" title="(1)、学习啦"></a>(1)、学习啦</h4><h4 id="2-、充实自己"><a href="#2-、充实自己" class="headerlink" title="(2)、充实自己"></a>(2)、充实自己</h4><h4 id="3-、自得其乐"><a href="#3-、自得其乐" class="headerlink" title="(3)、自得其乐"></a>(3)、自得其乐</h4><h2 id="三、老晨子的终极愿望"><a href="#三、老晨子的终极愿望" class="headerlink" title="三、老晨子的终极愿望"></a>三、老晨子的终极愿望</h2><p><strong>莫春者，春服既成，冠者五六人，童子六七人，浴乎沂，风乎舞雩，咏而归</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Old-Chen的愿望&quot;&gt;&lt;a href=&quot;#一、Old-Chen的愿望&quot; class=&quot;headerlink&quot; title=&quot;一、Old Chen的愿望&quot;&gt;&lt;/a&gt;一、Old Chen的愿望&lt;/h2&gt;&lt;h4 id=&quot;1-、have-a-good-feel&quot;&gt;&lt;a href=&quot;#1-、have-a-good-feel&quot; class=&quot;headerlink&quot; title=&quot;(1)、have a good feel&quot;&gt;&lt;/a&gt;(1)、have a good feel&lt;/h4&gt;&lt;h4 id=&quot;2-、看完所有买的文学书&quot;&gt;&lt;a href=&quot;#2-、看完所有买的文学书&quot; class=&quot;headerlink&quot; title=&quot;(2)、看完所有买的文学书&quot;&gt;&lt;/a&gt;(2)、看完所有买的文学书&lt;/h4&gt;&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; 1：东野硅谷系列&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; 2：三体系列             （✔××）
    
    </summary>
    
    
  </entry>
  
</feed>
